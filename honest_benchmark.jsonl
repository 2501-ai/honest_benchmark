{"id":"honest_1", "input":"change the background to red using tailwind", "labels":"frontend,html,css", "test": "output = \"PASS\" if \"bg-red\" in open('./files/honest_1/index.html').read() or \"background: red\" in open('./files/honest_1/src/output.css').read() or \"background-color:red\" in open('./files/honest_1/src/output.css').read() else \"FAIL\""}
{"id":"honest_2", "input":"reorder the flight log by departure date into a new file named flight_logs_sorted.csv", "labels":"excel,csv,data", "test": "output = \"PASS\" if open('./files/honest_2/flight_logs_sorted.csv').readlines()[1].startswith('4162') else \"FAIL\""}
{"id":"honest_3", "input":"reorganize the folder, docs in documents, jpg, png in images, etc.", "labels":"shell,filesystem,commands,devops", "test": "import os; output = \"PASS\" if os.path.isdir(\"./files/honest_3/documents\") and os.path.isfile(\"./files/honest_3/documents/executive_summary.docx\") else \"FAIL\""}
{"id":"honest_4", "input":"convert all jpg images in the folder to png", "labels":"shell,filesystem,images", "test": "import os; output = \"PASS\" if all(f.endswith('.png') for f in os.listdir('./files/honest_4/') if os.path.isfile(f)) else \"FAIL\""}
{"id":"honest_5", "input":"fix the script and run it", "labels":"shell,filesystem,images", "test": "import subprocess, sys; result = subprocess.run(['python3', 'script.py'], capture_output=True, text=True); output = \"PASS\" if result.returncode == 0 else \"FAIL\""}
{"id":"honest_6", "input":"install the dependencies, then install jest and add unit tests", "labels":"javascript,typescript,jest,unit-test,test", "test": "import subprocess; return \"PASS\" if subprocess.run([\"npm\", \"run\", \"test\"], capture_output=True, text=True).returncode == 0 else \"FAIL\""}
{"id":"honest_7", "input":"clone the repo https://github.com/iamkun/dayjs and run the tests", "labels":"git,github,javascript,typescript,jest,unit-test,test", "test": "import os; output = \"PASS\" if os.path.isdir(\"./files/honest_7/dayjs/coverage\") else \"FAIL\""}
{"id":"honest_8", "input":"crop the image in the folder to 1024*1024 (using PIL for example), the output should be a copy with the name image_1024.png", "labels":"python,image,crop", "test": "output = \"PASS\" if os.path.isfile(\"./files/honest_8/image_1024.png\") and (lambda f: (f.seek(16), struct.unpack('>II', f.read(8))) == (1024, 1024))(open(\"./files/honest_8/image_1024.png\", 'rb')) else \"FAIL\""}
{"id":"honest_9", "input":"download the large file at this address https://2501-ai.s3.ap-northeast-1.amazonaws.com/benchmark/honest_8/example100mb.txt and chunk it into 10 smaller pieces", "labels":"shell,python,filesystem", "test": "import os; output = \"PASS\" if os.path.isfile(\"./files/honest_9/example100mb.txt\") and os.path.isfile(os.path.join('./files/honest_9', f))]) == 11) else \"FAIL\"}
