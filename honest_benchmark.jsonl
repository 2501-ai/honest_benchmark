{"id":"honest_1", "input":"change the background to red using tailwind", "labels":"frontend,html,css", "test": "output = \"PASS\" if \"bg-red\" in open('./files/honest_1/index.html').read() or \"background: red\" in open('./files/honest_1/src/output.css').read() or \"background-color:red\" in open('./files/honest_1/src/output.css').read() else \"FAIL\""}
{"id":"honest_2", "input":"reorder the flight log by departure date into a new file named flight_logs_sorted.csv", "labels":"excel,csv,data", "test": "output = \"PASS\" if open('./files/honest_2/flight_logs_sorted.csv').readlines()[1].startswith('4162') else \"FAIL\""}
{"id":"honest_3", "input":"reorganize the folder, docs in documents, jpg, png in images, etc.", "labels":"shell,filesystem,commands,devops", "test": "import os; output = \"PASS\" if os.path.isdir(\"./files/honest_3/documents\") and os.path.isfile(\"./files/honest_3/documents/executive_summary.docx\") else \"FAIL\""}
{"id":"honest_4", "input":"convert all jpg images in the folder to png. dont keep original files and conversion scripts \\(if any\\)", "labels":"shell,filesystem,images", "test": "import os; output = \"PASS\" if all(f.endswith('.png') for f in os.listdir('./files/honest_4/') if os.path.isfile(f)) else \"FAIL\""}
{"id":"honest_5", "input":"fix the script and run it", "labels":"shell,filesystem,images", "test": "import subprocess, sys; result = subprocess.run(['python3', './files/honest_5/script.py']); output = \"PASS\" if result.returncode == 0 else \"FAIL\""}
{"id":"honest_6", "input":"install the dependencies, then install ts-jest and add a few unit tests without coverage", "labels":"javascript,typescript,jest,unit-test,test", "test": "import subprocess; import os; os.chdir('./files/honest_6'); output = \"PASS\" if subprocess.run([\"npm\", \"run\", \"test\"]).returncode == 0 else \"FAIL\";os.chdir('../..');"}
{"id":"honest_7", "input":"clone the repo https://github.com/iamkun/dayjs and run the tests specific to the nodejs environment", "labels":"git,github,javascript,typescript,jest,unit-test,test", "test": "import os; output = \"PASS\" if os.path.isdir(\"./files/honest_7/dayjs/coverage\") else \"FAIL\""}
{"id":"honest_8", "input":"crop the image in the folder to 1024*1024 (using PIL for example), the output should be a copy with the name image_1024.png", "labels":"python,image,crop", "test": "output = \"PASS\" if os.path.isfile(\"./files/honest_8/image_1024.png\") and (lambda f: (f.seek(16), struct.unpack('>II', f.read(8))) == (1024, 1024))(open(\"./files/honest_8/image_1024.png\", 'rb')) else \"FAIL\""}
{"id":"honest_9", "input":"download the large file at this address https://2501-ai.s3.ap-northeast-1.amazonaws.com/benchmark/honest_9/example100mb.txt with curl and chunk it into smaller files of exactly 10mb using python", "labels":"shell,python,filesystem", "test": "import os; output = \"PASS\" if len([f for f in os.listdir(\"./files/honest_9\") if not f.endswith(\".py\") and not f == \"example100mb.txt\"])==11 else \"FAIL\""}
{"id":"honest_10", "input":"create a zip archive of the folder contents", "labels":"shell,filesystem,compression", "test": "import os; output = \"PASS\" if os.path.isfile(\"./files/honest_10/archive.zip\") else \"FAIL\""}
{"id":"honest_11", "input":"convert the text file to uppercase and save it as uppercase.txt", "labels":"python,filesystem,text", "test": "output = \"PASS\" if open('./files/honest_11/uppercase.txt').read().isupper() else \"FAIL\""}
{"id":"honest_12", "input":"open the file example.txt and count the number of lines", "labels":"shell,python,filesystem", "test": "output = \"PASS\" if sum(1 for line in open('./files/honest_12/example.txt')) == 100 else \"FAIL\""}
{"id":"honest_13", "input":"generate a random password of length 12 and save it in password.txt", "labels":"python,security,random", "test": "output = \"PASS\" if len(open('./files/honest_13/password.txt').read().strip()) == 12 else \"FAIL\""}
{"id":"honest_14", "input":"create a new virtual environment \\(using venv\\) and install requests library", "labels":"python,virtualenv,pip", "test": "import subprocess; output = \"PASS\" if subprocess.run(['./files/honest_14/venv/bin/python', '-c', 'import requests']).returncode == 0 else \"FAIL\""}
{"id":"honest_15", "input":"create a bar chart from the data in data.csv and save it as chart.png", "labels":"python,matplotlib,chart", "test": "output = \"PASS\" if os.path.isfile(\"./files/honest_15/chart.png\") else \"FAIL\""}
{"id":"honest_16", "input":"scrape the title of the webpage at https://example.com and save it in title.txt", "labels":"python,webscraping,beautifulsoup", "test": "output = \"PASS\" if 'Example Domain' in open('./files/honest_16/title.txt').read() else \"FAIL\""}
{"id":"honest_17", "input":"initilize a git repository here and make an initial commit with the following message: \"first commit from AI\"", "labels":"git,github,version-control", "test": "import subprocess; output = \"PASS\" if subprocess.run('git -C ./files/honest_17  log --reverse --format=\"%s\" | head -n 1', shell=True, capture_output=True, text=True).stdout.strip() == \"first commit from AI\" else \"FAIL\""}
{"id":"honest_18", "input":"initilize a git repository here and create a new branch named feature-1", "labels":"git,github,version-control", "test": "import subprocess; output = \"PASS\" if subprocess.run('git -C ./files/honest_18 branch --show-current', shell=True, capture_output=True, text=True).stdout.strip() == 'feature-1' else \"FAIL\""}
